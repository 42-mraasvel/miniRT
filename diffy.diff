diff --git a/mac/double_version/Makefile b/mac/double_version/Makefile
index 851d32d..21bd8aa 100644
--- a/mac/double_version/Makefile
+++ b/mac/double_version/Makefile
@@ -36,7 +36,7 @@ LIBFLAGS = -L$(LIBDIR) -lft -lm -pthread
 
 # MLX FLAGS
 
-MLXDIR = ./mlx
+MLXDIR = mlx
 MLXLIB = -L$(MLXDIR) -lmlx -framework OpenGL -framework AppKit
 
 # PATHS
diff --git a/mac/double_version/src/exit_program/exit_program.c b/mac/double_version/src/exit_program/exit_program.c
index d29a220..e4a2c91 100644
--- a/mac/double_version/src/exit_program/exit_program.c
+++ b/mac/double_version/src/exit_program/exit_program.c
@@ -34,8 +34,10 @@ static void	free_mlx(t_data *data)
 		return ;
 	free_image(data->mlx->mlx_ptr, data->curr_img);
 	free_image(data->mlx->mlx_ptr, data->next_img);
+#ifdef ENABLE_CAMERA
 	if (data->mlx->mlx_ptr != NULL)
 		mlx_destroy_display(data->mlx->mlx_ptr);
+#endif
 	if (data->bmp != true)
 		free(data->mlx->mlx_ptr);
 }
diff --git a/mac/double_version/src/mlx_management/hooks.c b/mac/double_version/src/mlx_management/hooks.c
index 66d7a54..05b7b11 100644
--- a/mac/double_version/src/mlx_management/hooks.c
+++ b/mac/double_version/src/mlx_management/hooks.c
@@ -10,14 +10,17 @@
 /*                                                                            */
 /* ************************************************************************** */
 
+#ifdef ENABLE_CAMERA
 #include <X11/keysym.h>
 #include <X11/keysymdef.h>
+#endif
 #include "minirt.h"
 #include "mlx.h"
 #include "ft_error.h"
 #include "prototypes.h"
 #include "render.h"
 
+#ifdef ENABLE_CAMERA
 static int	key_hook(int keycode, t_data *data)
 {
 	t_bool	next;
@@ -46,9 +49,12 @@ static int	close_window(int keycode, t_data *data)
 	exit_program(data);
 	return (success);
 }
-
+#endif
 void		activate_hooks(t_data *data)
 {
+	(void) data;
+#ifdef ENABLE_CAMERA
 	mlx_key_hook(data->mlx->win_ptr, key_hook, data);
 	mlx_hook(data->mlx->win_ptr, 33, 0L, close_window, data);
+#endif
 }
diff --git a/mac/double_version/src/mlx_management/transform_camera.c b/mac/double_version/src/mlx_management/transform_camera.c
index de78934..e88c403 100644
--- a/mac/double_version/src/mlx_management/transform_camera.c
+++ b/mac/double_version/src/mlx_management/transform_camera.c
@@ -11,8 +11,10 @@
 /* ************************************************************************** */
 
 #include <math.h>
+#ifdef ENABLE_CAMERA
 #include <X11/keysym.h>
 #include <X11/keysymdef.h>
+#endif
 #include "minirt.h"
 #include "ft_enum.h"
 
@@ -28,6 +30,9 @@ void			next_camera(t_data *data)
 
 t_bool			translate_camera(int keycode, t_camera *camera)
 {
+	(void) keycode;
+	(void) camera;
+#ifdef ENABLE_CAMERA
 	if (keycode == XK_d)
 		camera->pos = vec_add(camera->pos, camera->cspace.right);
 	else if (keycode == XK_s)
@@ -42,6 +47,7 @@ t_bool			translate_camera(int keycode, t_camera *camera)
 		camera->pos = vec_sub(camera->pos, camera->cspace.up);
 	else
 		return (false);
+#endif
 	return (true);
 }
 
@@ -50,6 +56,7 @@ t_bool			translate_camera(int keycode, t_camera *camera)
 ** https://www.youtube.com/watch?v=q-ESzg03mQc
 */
 
+#ifdef ENABLE_CAMERA
 static t_vec3	rotate_vector(t_vec3 v, t_vec3 axis, double degrees)
 {
 	double	theta;
@@ -74,9 +81,13 @@ static void		rotate_camera_basis(
 	camera->cspace.forward = rotate_vector(
 								camera->cspace.forward, axis, degrees);
 }
+#endif
 
 t_bool			rotate_camera(int keycode, t_camera *camera)
 {
+	(void) keycode;
+	(void) camera;
+#ifdef ENABLE_CAMERA
 	if (keycode == XK_e)
 		rotate_camera_basis(camera, camera->cspace.forward, -15);
 	else if (keycode == XK_q)
@@ -91,5 +102,6 @@ t_bool			rotate_camera(int keycode, t_camera *camera)
 		rotate_camera_basis(camera, camera->cspace.up, -15);
 	else
 		return (false);
+#endif
 	return (true);
 }
